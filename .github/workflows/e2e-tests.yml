name: E2E Tests

on:
  workflow_call:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/e2e-tests.yml'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_learningplatform
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright
        working-directory: ./frontend
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Setup test database
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_learningplatform
        run: |
          python manage.py migrate
          python manage.py loaddata test_fixtures.json || echo "No fixtures found, continuing..."

      - name: Start backend server
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_learningplatform
          DEBUG: true
        run: |
          python manage.py runserver 8000 &
          sleep 5

      - name: Build and start frontend
        working-directory: ./frontend
        run: |
          npm run build
          npx serve -s dist -p 3000 &
          sleep 5

      - name: Wait for services
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8000/api/v1/health/ || curl -f http://localhost:8000/admin/; do sleep 2; done'
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Run Playwright E2E tests
        working-directory: ./frontend
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          API_BASE_URL: http://localhost:8000
        run: |
          npx playwright test --project=${{ matrix.browser }} --reporter=html

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            frontend/playwright-report/
            frontend/test-results/

  visual-regression:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend && pip install -r requirements.txt
          cd frontend && npm ci

      - name: Install Playwright
        working-directory: ./frontend
        run: npx playwright install chromium

      - name: Start services for visual testing
        run: |
          cd backend && python manage.py runserver 8000 &
          cd frontend && npm run dev &
          sleep 10

      - name: Run visual regression tests
        working-directory: ./frontend
        run: |
          npx playwright test --config=playwright.visual.config.ts || echo "Visual tests not configured yet"

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-results
          path: |
            frontend/visual-test-results/