name: Backend Tests

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: false
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_learningplatform
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage pytest-django pytest-cov safety bandit

      - name: Security check with Safety
        working-directory: ./backend
        run: |
          safety check --json --output safety-report.json || true
          safety check

      - name: Security check with Bandit
        working-directory: ./backend
        run: |
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . --skip B101

      - name: Run Django system checks
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_learningplatform
        run: |
          python manage.py check --deploy

      - name: Run migrations
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_learningplatform
        run: |
          python manage.py migrate

      - name: Run tests with coverage
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_learningplatform
        run: |
          pytest --cov=core --cov-report=xml --cov-report=html --cov-fail-under=80

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-test-results-py${{ matrix.python-version }}
          path: |
            backend/htmlcov/
            backend/*-report.json
            backend/coverage.xml

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-lint-${{ hashFiles('backend/requirements.txt') }}

      - name: Install linting dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy django-stubs

      - name: Check code formatting with Black
        working-directory: ./backend
        run: black --check --diff .

      - name: Check import sorting with isort
        working-directory: ./backend
        run: isort --check-only --diff .

      - name: Lint with flake8
        working-directory: ./backend
        run: flake8 .

      - name: Type check with mypy
        working-directory: ./backend
        run: mypy . --ignore-missing-imports