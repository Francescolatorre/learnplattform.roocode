name: Frontend Tests

on:
  workflow_call:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          npm ci

      - name: Run unit tests
        working-directory: ./frontend
        run: |
          npm run test:unit

      - name: Run integration tests
        working-directory: ./frontend
        run: |
          npm run test:integration

      - name: Run tests with coverage
        working-directory: ./frontend
        run: |
          npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-test-results-node${{ matrix.node-version }}
          path: |
            frontend/coverage/
            frontend/test-results/

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Check code formatting with Prettier
        working-directory: ./frontend
        run: |
          npx prettier --check .

      - name: Lint with ESLint
        working-directory: ./frontend
        run: |
          npm run lint

      - name: Type check with TypeScript
        working-directory: ./frontend
        run: |
          npx tsc --noEmit

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build application
        working-directory: ./frontend
        run: npm run build:production

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  accessibility:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          npm ci
          npm install --save-dev @axe-core/cli

      - name: Build application
        working-directory: ./frontend
        run: npm run build

      - name: Serve and test accessibility
        working-directory: ./frontend
        run: |
          npx serve -s dist -p 3000 &
          sleep 5
          npx axe http://localhost:3000 || echo "Accessibility issues found - see report above"

  bundle-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build and analyze bundle
        working-directory: ./frontend
        run: |
          npm run build
          npx vite-bundle-analyzer dist/