swagger: '2.0'
info:
  title: API Documentation
  description: API documentation for the backend
  version: v1
host: localhost:8000
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /api/v1/admin/dashboard/:
    get:
      operationId: api_v1_admin_dashboard_list
      description: API endpoint for admin-specific dashboard data.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters: []
  /api/v1/course-enrollments/:
    get:
      operationId: api_v1_course-enrollments_list
      description: API endpoint for course enrollments
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    post:
      operationId: api_v1_course-enrollments_create
      description: API endpoint for course enrollments
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    parameters: []
  /api/v1/course-enrollments/{id}/:
    get:
      operationId: api_v1_course-enrollments_read
      description: API endpoint for course enrollments
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    put:
      operationId: api_v1_course-enrollments_update
      description: API endpoint for course enrollments
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    patch:
      operationId: api_v1_course-enrollments_partial_update
      description: API endpoint for course enrollments
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    delete:
      operationId: api_v1_course-enrollments_delete
      description: API endpoint for course enrollments
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course enrollment.
      required: true
      type: integer
  /api/v1/course-versions/:
    get:
      operationId: api_v1_course-versions_list
      description: API endpoint for course versions
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/CourseVersion'
      tags:
      - api
    post:
      operationId: api_v1_course-versions_create
      description: API endpoint for course versions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseVersion'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CourseVersion'
      tags:
      - api
    parameters: []
  /api/v1/course-versions/{id}/:
    get:
      operationId: api_v1_course-versions_read
      description: API endpoint for course versions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseVersion'
      tags:
      - api
    put:
      operationId: api_v1_course-versions_update
      description: API endpoint for course versions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseVersion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseVersion'
      tags:
      - api
    patch:
      operationId: api_v1_course-versions_partial_update
      description: API endpoint for course versions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseVersion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseVersion'
      tags:
      - api
    delete:
      operationId: api_v1_course-versions_delete
      description: API endpoint for course versions
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course version.
      required: true
      type: integer
  /api/v1/courses/:
    get:
      operationId: api_v1_courses_list
      description: API endpoint for courses
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Course'
      tags:
      - api
    post:
      operationId: api_v1_courses_create
      description: API endpoint for courses
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    parameters: []
  /api/v1/courses/instructor/courses/:
    get:
      operationId: api_v1_courses_instructor_instructor_courses
      description: Fetch courses created by the instructor or all courses for admin.
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Course'
      tags:
      - api
    parameters: []
  /api/v1/courses/{id}/:
    get:
      operationId: api_v1_courses_read
      description: API endpoint for courses
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    put:
      operationId: api_v1_courses_update
      description: API endpoint for courses
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    patch:
      operationId: api_v1_courses_partial_update
      description: API endpoint for courses
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    delete:
      operationId: api_v1_courses_delete
      description: API endpoint for courses
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course.
      required: true
      type: integer
  /api/v1/courses/{id}/analytics/:
    get:
      operationId: api_v1_courses_analytics_list
      description: Get aggregated analytics for a course
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /api/v1/courses/{id}/details/:
    get:
      operationId: api_v1_courses_course_details
      description: Fetch course details without progress data.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course.
      required: true
      type: integer
  /api/v1/courses/{id}/enroll/:
    post:
      operationId: api_v1_courses_enroll
      description: API endpoint for courses
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course.
      required: true
      type: integer
  /api/v1/courses/{id}/student-progress/:
    get:
      operationId: api_v1_courses_student-progress_list
      description: |-
        API endpoint for retrieving detailed progress data for all students in a specific course.
        Provides individualized statistics about student performance, task completion,
        and engagement levels for instructors and administrators.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /api/v1/courses/{id}/student-progress/{user_id}/:
    get:
      operationId: api_v1_courses_student_progress
      description: Fetch student progress for a specific course and user.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Course'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course.
      required: true
      type: integer
    - name: user_id
      in: path
      required: true
      type: string
  /api/v1/courses/{id}/task-analytics/:
    get:
      operationId: api_v1_courses_task-analytics_list
      description: Get analytics data for all tasks in a course
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /api/v1/dashboard/admin-summary/:
    get:
      operationId: api_v1_dashboard_admin-summary_list
      description: API endpoint for admin dashboard summary.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters: []
  /api/v1/enrollments/:
    get:
      operationId: api_v1_enrollments_list
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    post:
      operationId: api_v1_enrollments_create
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    parameters: []
  /api/v1/enrollments/{id}/:
    get:
      operationId: api_v1_enrollments_read
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    put:
      operationId: api_v1_enrollments_update
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    patch:
      operationId: api_v1_enrollments_partial_update
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    delete:
      operationId: api_v1_enrollments_delete
      description: API endpoint for course enrollments with enhanced filtering and
        analytics.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course enrollment.
      required: true
      type: integer
  /api/v1/enrollments/{id}/update_status/:
    patch:
      operationId: api_v1_enrollments_update_status
      description: Update the enrollment status (active, completed, dropped).
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CourseEnrollment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CourseEnrollment'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this course enrollment.
      required: true
      type: integer
  /api/v1/instructor/courses/:
    get:
      operationId: api_v1_instructor_instructor_courses
      description: Fetch courses created by the instructor or all courses for admin.
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Course'
      tags:
      - api
    parameters: []
  /api/v1/instructor/dashboard/:
    get:
      operationId: api_v1_instructor_dashboard_list
      description: API endpoint for instructor-specific dashboard data.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters: []
  /api/v1/learning-tasks/:
    get:
      operationId: api_v1_learning-tasks_list
      description: API endpoint for learning tasks
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/LearningTask'
      tags:
      - api
    post:
      operationId: api_v1_learning-tasks_create
      description: API endpoint for learning tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/LearningTask'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/LearningTask'
      tags:
      - api
    parameters: []
  /api/v1/learning-tasks/course/{course_id}/:
    get:
      operationId: api_v1_learning-tasks_tasks_by_course
      description: Fetch tasks for a specific course.
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/LearningTask'
      tags:
      - api
    parameters:
    - name: course_id
      in: path
      required: true
      type: string
  /api/v1/learning-tasks/{id}/:
    get:
      operationId: api_v1_learning-tasks_read
      description: API endpoint for learning tasks
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LearningTask'
      tags:
      - api
    put:
      operationId: api_v1_learning-tasks_update
      description: API endpoint for learning tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/LearningTask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LearningTask'
      tags:
      - api
    patch:
      operationId: api_v1_learning-tasks_partial_update
      description: API endpoint for learning tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/LearningTask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/LearningTask'
      tags:
      - api
    delete:
      operationId: api_v1_learning-tasks_delete
      description: API endpoint for learning tasks
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this learning task.
      required: true
      type: integer
  /api/v1/quiz-attempts/:
    get:
      operationId: api_v1_quiz-attempts_list
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    post:
      operationId: api_v1_quiz-attempts_create
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizAttempt'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    parameters: []
  /api/v1/quiz-attempts/{id}/:
    get:
      operationId: api_v1_quiz-attempts_read
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    put:
      operationId: api_v1_quiz-attempts_update
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizAttempt'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    patch:
      operationId: api_v1_quiz-attempts_partial_update
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizAttempt'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    delete:
      operationId: api_v1_quiz-attempts_delete
      description: API endpoint for quiz attempts with enhanced filtering and analytics.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz attempt.
      required: true
      type: integer
  /api/v1/quiz-attempts/{id}/responses/:
    get:
      operationId: api_v1_quiz-attempts_responses
      description: Get all responses for a specific quiz attempt
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz attempt.
      required: true
      type: integer
  /api/v1/quiz-attempts/{id}/submit_responses/:
    post:
      operationId: api_v1_quiz-attempts_submit_responses
      description: Submit responses for a quiz attempt and calculate the score
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizAttempt'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/QuizAttempt'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz attempt.
      required: true
      type: integer
  /api/v1/quiz-options/:
    get:
      operationId: api_v1_quiz-options_list
      description: API endpoint for quiz options
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/QuizOption'
      tags:
      - api
    post:
      operationId: api_v1_quiz-options_create
      description: API endpoint for quiz options
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizOption'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/QuizOption'
      tags:
      - api
    parameters: []
  /api/v1/quiz-options/{id}/:
    get:
      operationId: api_v1_quiz-options_read
      description: API endpoint for quiz options
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizOption'
      tags:
      - api
    put:
      operationId: api_v1_quiz-options_update
      description: API endpoint for quiz options
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizOption'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizOption'
      tags:
      - api
    patch:
      operationId: api_v1_quiz-options_partial_update
      description: API endpoint for quiz options
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizOption'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizOption'
      tags:
      - api
    delete:
      operationId: api_v1_quiz-options_delete
      description: API endpoint for quiz options
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz option.
      required: true
      type: integer
  /api/v1/quiz-questions/:
    get:
      operationId: api_v1_quiz-questions_list
      description: API endpoint for quiz questions
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/QuizQuestion'
      tags:
      - api
    post:
      operationId: api_v1_quiz-questions_create
      description: API endpoint for quiz questions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizQuestion'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/QuizQuestion'
      tags:
      - api
    parameters: []
  /api/v1/quiz-questions/{id}/:
    get:
      operationId: api_v1_quiz-questions_read
      description: API endpoint for quiz questions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizQuestion'
      tags:
      - api
    put:
      operationId: api_v1_quiz-questions_update
      description: API endpoint for quiz questions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizQuestion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizQuestion'
      tags:
      - api
    patch:
      operationId: api_v1_quiz-questions_partial_update
      description: API endpoint for quiz questions
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizQuestion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizQuestion'
      tags:
      - api
    delete:
      operationId: api_v1_quiz-questions_delete
      description: API endpoint for quiz questions
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz question.
      required: true
      type: integer
  /api/v1/quiz-tasks/:
    get:
      operationId: api_v1_quiz-tasks_list
      description: API endpoint for quiz tasks
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/QuizTask'
      tags:
      - api
    post:
      operationId: api_v1_quiz-tasks_create
      description: API endpoint for quiz tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizTask'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/QuizTask'
      tags:
      - api
    parameters: []
  /api/v1/quiz-tasks/{id}/:
    get:
      operationId: api_v1_quiz-tasks_read
      description: API endpoint for quiz tasks
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizTask'
      tags:
      - api
    put:
      operationId: api_v1_quiz-tasks_update
      description: API endpoint for quiz tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizTask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizTask'
      tags:
      - api
    patch:
      operationId: api_v1_quiz-tasks_partial_update
      description: API endpoint for quiz tasks
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/QuizTask'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/QuizTask'
      tags:
      - api
    delete:
      operationId: api_v1_quiz-tasks_delete
      description: API endpoint for quiz tasks
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz task.
      required: true
      type: integer
  /api/v1/students/{id}/progress/:
    get:
      operationId: api_v1_students_progress_list
      description: Get a student's progress across all enrolled courses.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /api/v1/students/{id}/quiz-performance/:
    get:
      operationId: api_v1_students_quiz-performance_list
      description: Get detailed quiz performance data for a student
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /api/v1/task-progress/:
    get:
      operationId: api_v1_task-progress_list
      description: API endpoint for task progress tracking.
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/TaskProgress'
      tags:
      - api
    post:
      operationId: api_v1_task-progress_create
      description: API endpoint for task progress tracking.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskProgress'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TaskProgress'
      tags:
      - api
    parameters: []
  /api/v1/task-progress/{id}/:
    get:
      operationId: api_v1_task-progress_read
      description: API endpoint for task progress tracking.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskProgress'
      tags:
      - api
    put:
      operationId: api_v1_task-progress_update
      description: API endpoint for task progress tracking.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskProgress'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskProgress'
      tags:
      - api
    patch:
      operationId: api_v1_task-progress_partial_update
      description: API endpoint for task progress tracking.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskProgress'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskProgress'
      tags:
      - api
    delete:
      operationId: api_v1_task-progress_delete
      description: API endpoint for task progress tracking.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this task progress.
      required: true
      type: integer
  /api/v1/task-progress/{id}/update_status/:
    patch:
      operationId: api_v1_task-progress_update_status
      description: Update the task progress status (not_started, in_progress, completed).
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TaskProgress'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaskProgress'
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this task progress.
      required: true
      type: integer
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      description: API endpoint for users
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - api
    post:
      operationId: api_v1_users_create
      description: API endpoint for users
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - api
    parameters: []
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_read
      description: API endpoint for users
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - api
    put:
      operationId: api_v1_users_update
      description: API endpoint for users
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - api
    patch:
      operationId: api_v1_users_partial_update
      description: API endpoint for users
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - api
    delete:
      operationId: api_v1_users_delete
      description: API endpoint for users
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Custom token view that uses our enhanced JWT serializer
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomTokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomTokenObtainPair'
      tags:
      - auth
    parameters: []
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: API endpoint for user logout (blacklists the refresh token)
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - auth
    parameters: []
  /auth/register/:
    post:
      operationId: auth_register_create
      description: API endpoint for user registration
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Register'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Register'
      tags:
      - auth
    parameters: []
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
      - auth
    parameters: []
  /auth/validate-token/:
    get:
      operationId: auth_validate-token_list
      description: Validate the access token.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - auth
    parameters: []
  /health/:
    get:
      operationId: health_list
      description: Simple health check endpoint to verify the API is running
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - health
    parameters: []
  /users/profile/:
    get:
      operationId: users_profile_list
      description: API endpoint to fetch the authenticated user's profile.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - users
    parameters: []
definitions:
  User:
    required:
    - username
    - email
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      display_name:
        title: Display name
        type: string
        maxLength: 150
      role:
        title: Role
        type: string
        maxLength: 100
        minLength: 1
  Course:
    required:
    - title
    - description
    - status
    - visibility
    - creator
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      version:
        title: Version
        type: integer
      status:
        title: Status
        type: string
        maxLength: 100
        minLength: 1
      visibility:
        title: Visibility
        type: string
        maxLength: 100
        minLength: 1
      learning_objectives:
        title: Learning objectives
        type: string
      prerequisites:
        title: Prerequisites
        type: string
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      creator:
        title: Creator
        type: integer
      creator_details:
        $ref: '#/definitions/User'
  CourseEnrollment:
    required:
    - user
    - course
    - status
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
      course:
        title: Course
        type: integer
      enrollment_date:
        title: Enrollment date
        type: string
        format: date-time
        readOnly: true
      status:
        title: Status
        type: string
        enum:
        - active
        - completed
        - dropped
      settings:
        title: Settings
        type: object
        x-nullable: true
      user_details:
        $ref: '#/definitions/User'
      course_details:
        $ref: '#/definitions/Course'
      progress_percentage:
        title: Progress percentage
        type: string
        readOnly: true
  CourseVersion:
    required:
    - course
    - version_number
    - content_snapshot
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      course:
        title: Course
        type: integer
      version_number:
        title: Version number
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      content_snapshot:
        title: Content snapshot
        type: object
      notes:
        title: Notes
        type: string
      created_by:
        title: Created by
        type: integer
        x-nullable: true
      created_by_details:
        $ref: '#/definitions/User'
  LearningTask:
    required:
    - course
    - title
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      course:
        title: Course
        type: integer
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      order:
        title: Order
        type: integer
      is_published:
        title: Is published
        type: boolean
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
  QuizOption:
    required:
    - question
    - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      question:
        title: Question
        type: integer
      text:
        title: Text
        type: string
        minLength: 1
      is_correct:
        title: Is correct
        type: boolean
      order:
        title: Order
        type: integer
  QuizQuestion:
    required:
    - quiz
    - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      quiz:
        title: Quiz
        type: string
      text:
        title: Text
        type: string
        minLength: 1
      explanation:
        title: Explanation
        type: string
      points:
        title: Points
        type: integer
      order:
        title: Order
        type: integer
      options:
        type: array
        items:
          $ref: '#/definitions/QuizOption'
        readOnly: true
  QuizTask:
    required:
    - course
    - title
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      course:
        title: Course
        type: integer
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      order:
        title: Order
        type: integer
      is_published:
        title: Is published
        type: boolean
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
      time_limit_minutes:
        title: Time limit minutes
        type: integer
      pass_threshold:
        title: Pass threshold
        type: integer
      max_attempts:
        title: Max attempts
        type: integer
      randomize_questions:
        title: Randomize questions
        type: boolean
      questions:
        type: array
        items:
          $ref: '#/definitions/QuizQuestion'
        readOnly: true
  QuizResponse:
    required:
    - attempt
    - question
    - selected_option
    - is_correct
    - time_spent
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      attempt:
        title: Attempt
        type: integer
      question:
        title: Question
        type: integer
      selected_option:
        title: Selected option
        type: integer
      is_correct:
        title: Is correct
        type: boolean
      time_spent:
        title: Time spent
        type: string
      question_details:
        $ref: '#/definitions/QuizQuestion'
      selected_option_details:
        $ref: '#/definitions/QuizOption'
  QuizAttempt:
    required:
    - user
    - quiz
    - score
    - time_taken
    - completion_status
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
      quiz:
        title: Quiz
        type: string
      score:
        title: Score
        type: integer
      time_taken:
        title: Time taken
        type: string
      completion_status:
        title: Completion status
        type: string
        enum:
        - completed
        - incomplete
      attempt_date:
        title: Attempt date
        type: string
        format: date-time
        readOnly: true
      user_details:
        $ref: '#/definitions/User'
      quiz_details:
        $ref: '#/definitions/QuizTask'
      responses:
        type: array
        items:
          $ref: '#/definitions/QuizResponse'
        readOnly: true
  TaskProgress:
    required:
    - user
    - task
    - status
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
      task:
        title: Task
        type: integer
      status:
        title: Status
        type: string
        enum:
        - not_started
        - in_progress
        - completed
      time_spent:
        title: Time spent
        type: string
      completion_date:
        title: Completion date
        type: string
        format: date-time
        x-nullable: true
      user_details:
        $ref: '#/definitions/User'
      task_details:
        $ref: '#/definitions/LearningTask'
  CustomTokenObtainPair:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  Register:
    required:
    - username
    - password
    - password2
    - email
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      password2:
        title: Password2
        type: string
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      display_name:
        title: Display name
        type: string
        maxLength: 150
      role:
        title: Role
        type: string
        maxLength: 100
        minLength: 1
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
