version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: test_learningplatform
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.ci
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/test_learningplatform
      - DEBUG=true
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        python manage.py migrate --noinput &&
        python manage.py loaddata test_fixtures.json || echo 'No fixtures found' &&
        python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.ci
    environment:
      - VITE_API_BASE_URL=http://backend:8000
      - NODE_ENV=test
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    command: >
      sh -c "
        npm run build &&
        npx serve -s dist -p 3000
      "

volumes:
  postgres_data: